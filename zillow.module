<?php

error_reporting(E_ALL);
ini_set('display_errors', '1');

/**
* Implements hook_help.
*
* Displays help and module information.
*
* @param path
*   Which path of the site we're using to display help
* @param arg
*   Array that holds the current path as returned from arg() function
*/
function zillow_help($path, $arg) {
  switch ($path) {
    case "admin/help#zillow":
      return '<p>'.  t("This is where the help would be, if there were any.") .'</p>';
      break;
  }
}

/**
* Implements hook_menu().
*/
function zillow_menu() {
  $items = array(); 
  $items['start'] = array(
    'title' => 'Start',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('zillow_searchform_wizard'),
    'access callback' => TRUE,
    'description' => 'Searching for stuff...',
    'type' => MENU_LOCAL_TASK,
    'file' => 'zillow_wizard.form.inc',
    'weight' => 9,
  );




  //$items['start'] = array(
  //  'title' => 'Zillowed',
  //  'description' => 'Configuration for zillow module',
  //  'page callback' => 'drupal_get_form',
  //  'page arguments' => array('zillow_wizard'),
  //  'access callback' => TRUE,
  //  'file' => 'zillow_wizard.inc',
  //  'type' => MENU_NORMAL_ITEM,
  //);
  $items['menufun'] = array(
    //title => t(Greeting),
    'page callback' => 'menufun_hello',
    'access callback' => TRUE,
    'type' => MENU_CALLBACK,
  );
 
  return $items;
}

/**
* Implements hook_theme().
*/
function zillow_theme() {
  return array(
    'open_node_form' => array(
      'arguments' => array(
          'form' => NULL,
      ),
      'template' => 'open-node-form',
      'render element' => 'form',
    ),
  );
}

function zillow_node_view($node, $view_mode, $langcode){
  	if ($node->type === 'tour') {
	   // dpm($node);
		$my_settings = array(
		  'start_address' => array(
		  	'lat' => $node->field_tour_start_address['und'][0]['lat'],
			'lon' => $node->field_tour_start_address['und'][0]['lon'],
		  ),
		  'end_address' => array(
		  	'lat' => $node->field_tour_end_address['und'][0]['lat'],
			'lon' => $node->field_tour_end_address['und'][0]['lon'],
		  ),
		  'waypoints' => array(
			$node->field_tour_map['und'],
		  ),
		 );
				//dpm($my_settings);
		//add google api
		drupal_add_js('http://maps.googleapis.com/maps/api/js?sensor=false', 'external');
		$path = drupal_get_path('module', 'zillow');
		drupal_add_js($path . '/js/zillow.js', array('weight' => 1));
		drupal_add_js(array('zillow' => $my_settings), 'setting');
	}

}

/**
 * Implements hook_theme_registry_alter()
**/
function zillow_theme_registry_alter(&$theme_registry) {
  $mod_path = drupal_get_path('module', 'zillow');
  $theme_registry_copy = $theme_registry;       // munge on a copy
  _theme_process_registry($theme_registry_copy, 'phptemplate', 'theme_engine', 'pow', $mod_path);
  $theme_registry += array_diff_key($theme_registry_copy, $theme_registry);
  $hooks = array('node');
  foreach ($hooks as $h) {
    _zillow_insert_after_first_element($theme_registry[$h]['theme paths'], $mod_path);
  }
}

/**
 * Helper function for re-ordering arrays (needed by theme_registry_alter)
*/
function _zillow_insert_after_first_element(&$a, $element) {
  if(is_array($a)) {
    $first_element = array_shift($a);
    array_unshift($a, $first_element, $element);
  }
}